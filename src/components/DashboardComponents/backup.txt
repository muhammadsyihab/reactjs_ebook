import React from 'react';
import Tabs from '@mui/material/Tabs';
import Tab from '@mui/material/Tab';
import Typography from '@mui/material/Typography';
import Box from '@mui/material/Box';
import '../../assets/css/tabs.css';
import BukuTerpopulerS4 from './BukuTerpopulerS4'
import BukuTerbaruS4 from './BukuTerbaruS4';
import BukuTerbaikS4 from './BukuTerbaikS4';

function TabPanel(props) {
  const { children, value, index, ...other } = props;

  return (
    <div
      role="tabpanel"
      hidden={value !== index}
      id={`simple-tabpanel-${index}`}
      aria-labelledby={`simple-tab-${index}`}
      {...other}
    >
      {value === index && (
        <Box sx={{ p: 3 }}>
          <Typography>{children}</Typography>
        </Box>
      )}
    </div>
  );
}

const DCSection4 = () => {
  const [value, setValue] = React.useState(0);

  const handleChange = (event, newValue) => {
    setValue(newValue);
  };

  return (
    <center>
      <Box sx={{ width: '100%', justifyContent: 'center' }}>
      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>
        <Tabs
          value={value}
          onChange={handleChange}
          aria-label="basic tabs example"
          className="tabs" // Tambahkan kelas CSS "tabs"
          centered>
          <Tab label="Buku Terpopuler" />
          <Tab label="Buku Terbaru" />
          <Tab label="Buku Terbaik" />
        </Tabs>
      </Box>
      <TabPanel value={value} index={0}>
        <BukuTerpopulerS4/>
      </TabPanel>
      <TabPanel value={value} index={1}>
        <BukuTerbaruS4/>
      </TabPanel>
      <TabPanel value={value} index={2}>
        <BukuTerbaikS4/>
      </TabPanel>
    </Box>
    </center>
  );
};

export default DCSection4;

//////////////////////////////////////////////
import React, { useEffect, useState } from 'react';
import { useTheme } from '@mui/material/styles';
import Box from '@mui/material/Box';
import MobileStepper from '@mui/material/MobileStepper';
import Paper from '@mui/material/Paper';
import Typography from '@mui/material/Typography';
import Button from '@mui/material/Button';
import KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';
import KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';
import { useRecoilValue, useSetRecoilState } from 'recoil';
import { fetchBukuTerbaik, BukuTerbaikSelector } from '../../recoil/api/apiBukuState';

const BukuTerbaikS4 = () => {
  const theme = useTheme();
  const [activeStep, setActiveStep] = useState(0);
  const books = useRecoilValue(BukuTerbaikSelector);
  const setBooks = useSetRecoilState(BukuTerbaikSelector);

  useEffect(() => {
    const getTerbaikBooks = async () => {
      const booksData = await fetchBukuTerbaik();
      setBooks(booksData);
    };

    getTerbaikBooks();
  }, [setBooks]);

  const maxSteps = books ? books.length : 0;

  const handleNext = () => {
    setActiveStep((prevActiveStep) => prevActiveStep + 1);
  };

  const handleBack = () => {
    setActiveStep((prevActiveStep) => prevActiveStep - 1);
  };

  if (!books || books.length === 0) {
    return <div>Loading...</div>;
  }

  return (
    <Box sx={{ maxWidth: 400, flexGrow: 1 }}>
      <Paper
        square
        elevation={0}
        sx={{
          display: 'flex',
          alignItems: 'center',
          height: 50,
          pl: 2,
          bgcolor: 'background.default',
        }}
      >
        <Typography>{books[activeStep].title}</Typography>
      </Paper>
      <Box
        component="img"
        sx={{
          height: 255,
          display: 'block',
          maxWidth: 400,
          overflow: 'hidden',
          width: '100%',
        }}
        src={books[activeStep].wiki_url}
        alt={books[activeStep].title}
      />
      <MobileStepper
        steps={maxSteps}
        position="static"
        activeStep={activeStep}
        nextButton={
          <Button
            size="small"
            onClick={handleNext}
            disabled={activeStep === maxSteps - 1}
          >
            Next
            {theme.direction === 'rtl' ? (
              <KeyboardArrowLeft />
            ) : (
              <KeyboardArrowRight />
            )}
          </Button>
        }
        backButton={
          <Button size="small" onClick={handleBack} disabled={activeStep === 0}>
            {theme.direction === 'rtl' ? (
              <KeyboardArrowRight />
            ) : (
              <KeyboardArrowLeft />
            )}
            Back
          </Button>
        }
      />
    </Box>
  );
};

export default BukuTerbaikS4;
///////////////////////////////////////
import React, { useEffect, useState } from 'react';
import { useTheme } from '@mui/material/styles';
import Box from '@mui/material/Box';
import MobileStepper from '@mui/material/MobileStepper';
import Paper from '@mui/material/Paper';
import Typography from '@mui/material/Typography';
import Button from '@mui/material/Button';
import KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';
import KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';
import { useRecoilValue, useSetRecoilState } from 'recoil';
import { fetchBooks, bookSelector } from '../../recoil/api/apiBukuState';

const BukuTerpopulerS4 = () => {
  const theme = useTheme();
  const [activeStep, setActiveStep] = useState(0);
  const books = useRecoilValue(bookSelector);
  const setBooks = useSetRecoilState(bookSelector);

  useEffect(() => {
    const getPopularBooks = async () => {
      const booksData = await fetchBooks();
      setBooks(booksData);
    };

    getPopularBooks();
  }, [setBooks]);

  const maxSteps = books ? books.length : 0;

  const handleNext = () => {
    setActiveStep((prevActiveStep) => prevActiveStep + 1);
  };

  const handleBack = () => {
    setActiveStep((prevActiveStep) => prevActiveStep - 1);
  };

  if (!books || books.length === 0) {
    return <div>Loading...</div>;
  }

  return (
    <Box sx={{ maxWidth: 400, flexGrow: 1 }}>
      <Paper
        square
        elevation={0}
        sx={{
          display: 'flex',
          alignItems: 'center',
          height: 50,
          pl: 2,
          bgcolor: 'background.default',
        }}
      >
        <Typography>{books[activeStep].title}</Typography>
      </Paper>
      <Box
        component="img"
        sx={{
          height: 255,
          display: 'block',
          maxWidth: 400,
          overflow: 'hidden',
          width: '100%',
        }}
        src={books[activeStep].wiki_url}
        alt={books[activeStep].title}
      />
      <MobileStepper
        steps={maxSteps}
        position="static"
        activeStep={activeStep}
        nextButton={
          <Button
            size="small"
            onClick={handleNext}
            disabled={activeStep === maxSteps - 1}
          >
            Next
            {theme.direction === 'rtl' ? (
              <KeyboardArrowLeft />
            ) : (
              <KeyboardArrowRight />
            )}
          </Button>
        }
        backButton={
          <Button size="small" onClick={handleBack} disabled={activeStep === 0}>
            {theme.direction === 'rtl' ? (
              <KeyboardArrowRight />
            ) : (
              <KeyboardArrowLeft />
            )}
            Back
          </Button>
        }
      />
    </Box>
  );
};

export default BukuTerpopulerS4;
//////////////////////////////////////
import React, { useEffect, useState } from 'react';
import { useTheme } from '@mui/material/styles';
import Box from '@mui/material/Box';
import MobileStepper from '@mui/material/MobileStepper';
import Paper from '@mui/material/Paper';
import Typography from '@mui/material/Typography';
import Button from '@mui/material/Button';
import KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';
import KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';
import { useRecoilValue, useSetRecoilState } from 'recoil';
import { fetchBukuTerbaru, BukuTerbaruSelector } from '../../recoil/api/apiBukuState';

const BukuTerbaruS4 = () => {
  const theme = useTheme();
  const [activeStep, setActiveStep] = useState(0);
  const books = useRecoilValue(BukuTerbaruSelector);
  const setBooks = useSetRecoilState(BukuTerbaruSelector);

  useEffect(() => {
    const getBukuTerbaru = async () => {
      const booksData = await fetchBukuTerbaru();
      setBooks(booksData);
    };

    getBukuTerbaru();
  }, [setBooks]);

  const maxSteps = books ? books.length : 0;

  const handleNext = () => {
    setActiveStep((prevActiveStep) => prevActiveStep + 1);
  };

  const handleBack = () => {
    setActiveStep((prevActiveStep) => prevActiveStep - 1);
  };

  if (!books || books.length === 0) {
    return <div>Loading...</div>;
  }

  return (
    <Box sx={{ maxWidth: 400, flexGrow: 1 }}>
      <Paper
        square
        elevation={0}
        sx={{
          display: 'flex',
          alignItems: 'center',
          height: 50,
          pl: 2,
          bgcolor: 'background.default',
        }}
      >
        <Typography>{books[activeStep].title}</Typography>
      </Paper>
      <Box
        component="img"
        sx={{
          height: 255,
          display: 'block',
          maxWidth: 400,
          overflow: 'hidden',
          width: '100%',
        }}
        src={books[activeStep].wiki_url}
        alt={books[activeStep].title}
      />
      <MobileStepper
        steps={maxSteps}
        position="static"
        activeStep={activeStep}
        nextButton={
          <Button
            size="small"
            onClick={handleNext}
            disabled={activeStep === maxSteps - 1}
          >
            Next
            {theme.direction === 'rtl' ? (
              <KeyboardArrowLeft />
            ) : (
              <KeyboardArrowRight />
            )}
          </Button>
        }
        backButton={
          <Button size="small" onClick={handleBack} disabled={activeStep === 0}>
            {theme.direction === 'rtl' ? (
              <KeyboardArrowRight />
            ) : (
              <KeyboardArrowLeft />
            )}
            Back
          </Button>
        }
      />
    </Box>
  );
};

export default BukuTerbaruS4;
////////////////////////////////////





////////////////////////////////////////
before

/////
import React, { useEffect, useState } from 'react';
import { useRecoilValue, useSetRecoilState } from 'recoil';
import { fetchBukuTerbaik, BukuTerbaikSelector } from '../../recoil/api/apiBukuState';

const DCSection4 = () => {
  const books = useRecoilValue(BukuTerbaikSelector);
  const setBooks = useSetRecoilState(BukuTerbaikSelector);

  useEffect(() => {
    const getTerbaikBooks = async () => {
      const booksData = await fetchBukuTerbaik();
      setBooks(booksData);
    };

    getTerbaikBooks();
  }, [setBooks]);
  console.log(books);

  const renderBooks = () => {
    if (books === null) {
      return null; // Return null if books is null
    }
  
    const bookElements = [];
  
    books.forEach(book => {
      bookElements.push(
        <div className="single-slide" key={book.id}>
          <div className="product-card">
            <div className="product-header">
              <a href="" className="author">
                {book.author}
              </a>
              <h3>
                <a href="/product-details">{book.title}</a>
              </h3>
            </div>
            <div className="product-card--body">
              <div className="card-image">
                <img src={book.cover} alt="" height={280} width={300} />
              </div>
            </div>
          </div>
        </div>
      );
    });
  
    return bookElements;
  };

  return (
    <section className="section-padding">
      <h2 className="sr-only">Home Tab Slider Section</h2>
      <div className="container">
        <div className="sb-custom-tab">
          {/* Nav Tabs */}
          <ul className="nav nav-tabs" id="myTab" role="tablist">
            {/* Tab 1 */}
            <li className="nav-item">
              <a
                className="nav-link active"
                id="shop-tab"
                data-toggle="tab"
                href="#shop"
                role="tab"
                aria-controls="shop"
                aria-selected="true"
              >
                Buku Terpopuler
              </a>
              <span className="arrow-icon" />
            </li>
            {/* Tab 2 */}
            <li className="nav-item">
              <a
                className="nav-link"
                id="men-tab"
                data-toggle="tab"
                href="#men"
                role="tab"
                aria-controls="men"
                aria-selected="true"
              >
                Buku Terbaru
              </a>
              <span className="arrow-icon" />
            </li>
            {/* Tab 3 */}
            <li className="nav-item">
              <a
                className="nav-link"
                id="woman-tab"
                data-toggle="tab"
                href="#woman"
                role="tab"
                aria-controls="woman"
                aria-selected="false"
              >
                Review Terbaik
              </a>
              <span className="arrow-icon" />
            </li>
          </ul>
          {/* Tab Content */}
          <div className="tab-content" id="myTabContent">
            {/* Tab 1 Content */}
            <div
              className="tab-pane show active"
              id="shop"
              role="tabpanel"
              aria-labelledby="shop-tab"
            >
              <div
                className="product-slider multiple-row  slider-border-multiple-row  sb-slick-slider"
                data-slick-setting='{
                  "autoplay": true,
                  "autoplaySpeed": 8000,
                  "slidesToShow": 5,
                  "rows": 1,
                  "dots": true
                }'
                data-slick-responsive='[
                  {"breakpoint":1200, "settings": {"slidesToShow": 3} },
                  {"breakpoint":768, "settings": {"slidesToShow": 2} },
                  {"breakpoint":480, "settings": {"slidesToShow": 1} },
                  {"breakpoint":320, "settings": {"slidesToShow": 1} }
                ]'
              >
                {/* Render Books */}
                {renderBooks()}
              </div>
            </div>
          </div>
          {/* Float Right */}
          <div className="float-right">
            <a href="/lihat-semua">
              Lihat Semua <i className="fas fa-chevron-circle-right" />
            </a>
          </div>
        </div>
      </div>
    </section>
  );
};

export default DCSection4;


